// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "github.com/babon21/excel-offer-storage/internal/offer/domain"
	mock "github.com/stretchr/testify/mock"
)

// OfferRepository is an autogenerated mock type for the OfferRepository type
type OfferRepository struct {
	mock.Mock
}

// DeleteList provides a mock function with given fields: sellerId, offerIds
func (_m *OfferRepository) DeleteList(sellerId string, offerIds []string) error {
	ret := _m.Called(sellerId, offerIds)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []string) error); ok {
		r0 = rf(sellerId, offerIds)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetList provides a mock function with given fields: sellerId, offerId, offerName
func (_m *OfferRepository) GetList(sellerId string, offerId string, offerName string) ([]domain.Offer, error) {
	ret := _m.Called(sellerId, offerId, offerName)

	var r0 []domain.Offer
	if rf, ok := ret.Get(0).(func(string, string, string) []domain.Offer); ok {
		r0 = rf(sellerId, offerId, offerName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Offer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(sellerId, offerId, offerName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetListBySellerId provides a mock function with given fields: sellerId
func (_m *OfferRepository) GetListBySellerId(sellerId string) ([]domain.Offer, error) {
	ret := _m.Called(sellerId)

	var r0 []domain.Offer
	if rf, ok := ret.Get(0).(func(string) []domain.Offer); ok {
		r0 = rf(sellerId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Offer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(sellerId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveList provides a mock function with given fields: _a0
func (_m *OfferRepository) SaveList(_a0 []domain.Offer) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func([]domain.Offer) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateList provides a mock function with given fields: offers
func (_m *OfferRepository) UpdateList(offers []domain.Offer) error {
	ret := _m.Called(offers)

	var r0 error
	if rf, ok := ret.Get(0).(func([]domain.Offer) error); ok {
		r0 = rf(offers)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
